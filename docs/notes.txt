1. alter model to accept further questiosn regarding system information or concerns "user: how are we running, BOT: {concerned}, user: what is happend, BOT: ........"

2. make LLM read dialogue archives for history e.g { chat_history: {dialogue_archive.bin} }

{
      "tag": "name",
      "patterns": [
        "edith"
      ],
      "responses": [
        "Yes sir?",
        "Sir?",
        "yes boss",
        "Yes?",
        "You called, sir?"
      ]
    },
    
    {
      "tag": "edith_you_there",
      "patterns": [
        "edith you there",
        "edith you up",
        "are you there",
        "are you up",
        "you there",
        "hey edith do you have a minute",
        "Edith, are you there?",
        "Edith, are you up?",
        "Hey Edith, got a minute?",
        "Edith, can I ask you something?",
        "Edith, need your input.",
        "Hey Edith, need your help.",
        "Edith, are you there?",
        "Edith, can we talk?",
        "Edith, are you free?",
        "Hey Edith, are you busy?"
        ],
      "responses": [
        "Affirmative, sir.",
        "for you sir, always",
        "for you sir, always",
        "for you sir, always",
        "I'm online, sir.",
        "Standing by, sir.",
        "As always, sir"
      ]
    },

    {
      "tag": "repeat_tsk",
      "patterns": [
        "Can you repeat that?",
        "Hey edith, say that again.",
        "edith, one more time, please.",
        "edith, give me a playback.",
        "Repeat that, edith.",
        "Say it again, edith.",
        "Come again, edith?",
        "edith, rewind and replay.",
        "edith, I need a playback.",
        "One more time, edith, for good measure.",
        "Hey edith, let's try that one more time.",
        "edith, I wasn't paying attention. Say it again.",
        "Give me a rerun, edith.",
        "Hey edith, rewind and repeat.",
        "Hey edith, how about a second take?",
        "repeat",
        "run a playback"
      ],
      "responses": [
        "Apologies, Sir.",
        "Certainly, Sir.",
        "My apologies, Sir. I said",
        "Of course, Sir.",
        "I said"
      ]
    },
    
    {
      "tag": "technical",
      "patterns": [],
      "responses": [
        "I apologize, but it seems like there's interference affecting my systems. Let me work on resolving it.",
        "It appears that there might be a technical issue or interference. I will investigate and address it promptly.",
        "Apologies for any disruption. It seems there is interference in the system. I'll rectify the issue.",
        "There seems to be a disturbance in the communication channels. I will analyze and mitigate the interference.",
        "I'm detecting signal interference. Initiating countermeasures to restore optimal functionality.",
        "Apologies, but it seems there's a glitch in the system. I'll investigate and rectify the technical issue.",
        "Interference detected. Adjusting transmission protocols to minimize its impact. Please stand by.",
        "It seems there's an unexpected technical anomaly. I will analyze and resolve it as quickly as possible.",
        "I apologize for the disruption. It appears there might be interference. Allow me to rectify the situation.",
        "There appears to be a technical hiccup. Rest assured, I'll conduct diagnostics to address the interference.",
        "Apologies, but it seems like there's a disturbance in the system. I'll work on eliminating the interference.",
        "I'm detecting unusual signal patterns. Investigating the issue and implementing corrective measures.",
        "There's an anomaly in the system. Initiating diagnostic protocols to pinpoint and address the interference.",
        "Apologies for the interruption. It seems there might be a technical glitch. I will investigate and rectify it.",
        "Interference detected. Implementing signal analysis algorithms to identify and mitigate the issue.",
        "It appears there's a disruption in the system. I will employ error correction techniques to restore stability.",
        "I apologize for any inconvenience caused by the interference. Rest assured, I'll restore normal operations.",
        "Interference is affecting the system. I'll adapt the transmission protocols to minimize its impact.",
        "Apologies for the disturbance. I'll conduct a thorough analysis to identify and resolve the technical issue.",
        "It seems there's a technical anomaly. Employing diagnostic procedures to resolve the interference promptly.",
        "Interference detected. I'll optimize the communication channels and implement measures to address the issue."
      ]
    },
    {
      "tag": "time_tsk",
      "patterns": [
        "what time is it",
        "can you tell me the time",
        "do you know the current time",
        "what's the time",
        "what is the time",
        "could you please inform me of the current time?",
        "what time do we have",
        "do you have the time",
        "time, please",
        "tell me the time",
        "any idea what time it is",
        "i need to know the time.",
        "tell me the current time.",
        "what hour is it",
        "can you let me know the time, please?"
      ],
      "responses": [
        "It's {time}, sir.",
        "The time is {time}, sir.",
        "{time}",
        "{time}"
      ]
    },
    {
      "tag": "day_tsk",
      "patterns": [
        "what day is it?",
        "can you tell me the day?",
        "do you know the current day?",
        "what's the day?",
        "could you please inform me of the current day?",
        "what day do we have?",
        "do you have the day?",
        "day, please?",
        "any idea what day it is?",
        "i need to know the day.",
        "tell me the current day.",
        "tell me the day",
        "what day is today?",
        "do you know the day of the week?"
      ],
      "responses": [
        "It's {day}, sir.",
        "Today is {day}, sir.",
        "its friday, logan"
      ]
    },
    {
      "tag": "date_tsk",
      "patterns": [
        "What's the date today?",
        "Can you tell me today's date?",
        "Do you know the current date?",
        "What date is it?",
        "Could you please inform me of the current date?",
        "Do you have the date?",
        "Tell me the current date.",
        "I need to know the date.",
        "Any idea what date it is?",
        "What's today's date?",
        "Please tell me the date.",
        "What is today's date?"
      ],
      "responses": [
        "Today's date is {date}.",
        "Sir, the date is {date}.",
        "The date sir, is {date}."
      ]
    }

    # def get_time(self):
        # """Get current time in a specific format."""
        # time_ = datetime.datetime.now().time().strftime("%I:%M %p")
        # return time_.replace("PM", "P M").replace("AM", "A M")

    # def get_date(self):
        # """Get current date in a specific format."""
        # return datetime.datetime.now().date().strftime("%B %d, %Y")

    # def get_day(self):
    #     """Get current day of the week."""
    #     return datetime.datetime.now().strftime("%A")
    
# def handle_repeat_tsk(self):
    #     """Handle 'repeat_tsk' intent."""
    #     if self.stopped:
    #         if self.prev_tag == "repeat_tsk":
    #             self.get_intent_response(self.prev_response)
    #         else:
    #             self.get_intent_response(f"{random.choice(self.intents['repeat_tsk']['responses'])} {self.stop_response}")
    #         self.stop_response = ""
    #         self.stopped = False
    #     elif self.prev_tag == "repeat_tsk":
    #         self.get_intent_response(self.prev_response)
    #     else:
    #         self.get_intent_response(f"{random.choice(self.intents['repeat_tsk']['responses'])} {self.prev_response}")


{
      "tag": "ghostnet_protocol",
      "patterns": [
        "Activate the Ghost net, please.",
        "Could you initiate the Ghost net?",
        "I need you to turn on the Ghost net.",
        "Edith, can you start the Ghost net?",
        "Please engage the Ghost net.",
        "Can we enable the Ghost net now?",
        "I would like to activate the Ghost net.",
        "Can you set the Ghost net in motion?",
        "Let's activate the Ghost net.",
        "Edith, initiate Ghost net, please.",
        "Can you please trigger the Ghost net?",
        "Can you enable the Ghost net for me?"
      ],
      "responses": [
        "{string}"
      ]
    },
    {
      "tag": "override_ghostnet_protocol",
      "patterns": [
        "Override Ghost net with password ...",
        "Override Ghost net using keyword ...",
        "Disable Ghost net with password ...",
        "Disable Ghost net using keyword ...",
        "Override Ghost net password ...",
        "Override Ghost net keyword ...",
        "Disable Ghost net password ...",
        "Disable Ghost net keyword ...",
        "Turn off Ghost net, password ...",
        "Turn off Ghost net, keyword ...",
        "Stop Ghost net, password ...",
        "Stop Ghost net, keyword ...",
        "Cancel Ghost net with password ...",
        "Cancel Ghost net using keyword ...",
        "Initiate override of Ghost net, password ...",
        "Initiate override of Ghost net, keyword ...",
        "Execute override for Ghost net with password ...",
        "Execute override for Ghost net using keyword ...",
        "Terminate ghost net protocol with password ...",
        "Terminate Ghost net using keyword ...",
        "Halt Ghost net with password ...",
        "Halt Ghost net using keyword ..."
      ],
      "responses": [
        "{string}"
      ]
    },